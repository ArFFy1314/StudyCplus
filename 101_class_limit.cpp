//权限
/*属性和行为作为主体

C++面向对象的三大特性为： == 封装、继承、多态 ==
C++认为 == 万事万物都皆为对象 == ，对象上有其属性和行为
**例如：**
​	1.人可以作为对象，属性有姓名、年龄、身高、体重...，行为有走、跑、跳、吃饭、唱歌...
​	2.车也可以作为对象，属性有轮胎、方向盘、车灯..., 行为有载人、放音乐、放空调...
​	具有相同性质的 == 对象 == ，我们可以抽象称为 == 类 == ，人属于人类，车属于车类
###封装的意义，封装是C++面向对象三大特性之一
* 将属性和行为作为一个整体，表现生活中的事物
* 将属性和行为加以权限控制

**封装意义一：**
​	在设计类的时候，属性和行为写在一起，表现事物
**语法：** class 类名{ 访问权限： 属性 / 行为 };*/
//**封装意义二：**
//类在设计时，可以把属性和行为放在不同的权限下，加以控制
//访问权限有三种：
//1. public        公共权限
//2. protected 保护权限
//3. private      私有权限



#include<iostream>
using namespace std;
//三种权限
//公共权限  public     类内可以访问  类外可以访问
//保护权限  protected  类内可以访问  类外不可以访问
//私有权限  private    类内可以访问  类外不可以访问

class Person
{
	//姓名  公共权限
public:
	string m_Name;

	//汽车  保护权限
protected:
	string m_Car;

	//银行卡密码  私有权限
private:
	int m_Password;

public:
	void func()
	{
		m_Name = "张三";
		m_Car = "拖拉机";
		m_Password = 123456;
	}
};

int main() {

	Person p;
	p.m_Name = "李四";
	//p.m_Car = "奔驰";  //保护权限类外访问不到
	//p.m_Password = 123; //私有权限类外访问不到
	system("pause");
	return 0;
}